{"version":3,"sources":["components/Status.js","components/Statuses.js","components/Celkovystatus.js","App.js","index.js"],"names":["Status","props","i","newArray","sluzby","reverse","zdroj","map","data","x","status","y","time","id","issueTime","className","name","length","width","height","margin","top","right","bottom","left","type","domain","dataKey","unit","cursor","strokeDasharray","shape","entry","key","fill","Statuses","names","Celkovystatus","write","e","includes","icon","faCheckCircle","faExclamationTriangle","errTime","urls","App","state","servicesNames","geterrTime","a","fetch","getErrTime","json","this","fetchingData","then","setState","response","promises","Promise","all","results","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.663a4afa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell\r\n} from \"recharts\";\r\n\r\nconst Status = props => {\r\n  let i = 1;\r\n\r\n  let newArray = [...props.sluzby];\r\n  newArray.reverse();\r\n\r\n  const zdroj = newArray.map(data => {\r\n    return {\r\n      x: data.status === true ? \"true\" : \"false\",\r\n      y: data.time,\r\n      id: i++\r\n    };\r\n  });\r\n  const issueTime = newArray.map(data => {\r\n    return data.status;\r\n  });\r\n  const data = zdroj;\r\n  return (\r\n    <div className=\"api pb-3\">\r\n      <h4>{props.name} </h4>\r\n      <p className=\"m-0 p-0 lasthours\">Last 24 hours (5 min.)</p>\r\n      {issueTime[issueTime.length - 1] === true ? (\r\n        <div className=\"serviceworks\">Service is working</div>\r\n      ) : (\r\n        <div className=\"serviceissue\">\r\n          there is an issue <br />\r\n          <span className=\"fix\">since {props.time}</span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex justify-content-center\">\r\n        <ScatterChart\r\n          width={1600}\r\n          height={150}\r\n          margin={{\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 20\r\n          }}\r\n        >\r\n          <CartesianGrid />\r\n          <YAxis\r\n            type=\"number\"\r\n            domain={[0, 1500]}\r\n            dataKey=\"y\"\r\n            name=\"latency\"\r\n            unit=\"ms\"\r\n          />\r\n          <XAxis type=\"\" domain={[0, 288]} dataKey=\"id\" name=\"\" unit=\"\" />\r\n          <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n          <Scatter name=\"Connection\" data={data} shape=\"circle\">\r\n            {data.map((entry, id) => (\r\n              <Cell\r\n                key={id}\r\n                fill={entry.x === \"true\" ? \"#00ff40\" : \"#ff0000\"}\r\n              />\r\n            ))}\r\n          </Scatter>\r\n        </ScatterChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport Status from \"./Status\";\r\n\r\nconst Statuses = props => {\r\n  const { sluzby, time, names } = props;\r\n  const status = sluzby.map((data, i) => {\r\n    return (\r\n      <Status\r\n        sluzby={sluzby[i].name}\r\n        time={time}\r\n        key={sluzby[i].name[i].id}\r\n        name={names[i]}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div>{status}</div>;\r\n};\r\n\r\nexport default Statuses;\r\n","import React from \"react\";\r\n//import moment from \"moment\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Celkovystatus = props => {\r\n  let newArray = [...props.sluzby];\r\n  newArray.reverse();\r\n\r\n  const checkStatus = newArray.map((data, i) => {\r\n    return data.name.map(e => {\r\n      return e.status;\r\n    });\r\n  });\r\n  const check = checkStatus.map(data => {\r\n    return data[0];\r\n  });\r\n\r\n  const write = check.includes(false);\r\n  return (\r\n    <div className=\"all pb-2\">\r\n      <h1>Barkio services status</h1>\r\n\r\n      {write === false ? (\r\n        <p className=\"allworks\">\r\n          All server components operational\r\n          <span className=\"pl-1\">\r\n            <FontAwesomeIcon icon={faCheckCircle} />\r\n          </span>\r\n        </p>\r\n      ) : (\r\n        <p className=\"allissue\">\r\n          We are recognizing issues on one of our service\r\n          <span className=\"pl-1\">\r\n            <FontAwesomeIcon icon={faExclamationTriangle} />\r\n          </span>\r\n          <br />\r\n          <span className=\"fix2\">since {props.time}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Celkovystatus;\r\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n//import moment from \"moment\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Statuses from \"./components/Statuses\";\nimport Celkovystatus from \"./components/Celkovystatus\";\nconst errTime = \"http://localhost:3001/time\";\nconst urls = [\"http://localhost:3001/namesArray\"];\nconst allData = \"http://localhost:3001/dataArray\";\n\nexport class App extends Component {\n  state = {\n    time: [],\n    data: [],\n    servicesNames: []\n  };\n\n  async componentDidMount() {\n    await this.fetchingData();\n\n    async function geterrTime() {\n      let getErrTime = await fetch(errTime);\n      let data = await getErrTime.json();\n      return data;\n    }\n    geterrTime().then(data => {\n      this.setState({ time: data });\n    });\n\n    const response = await fetch(allData);\n    const json = await response.json();\n    this.setState({ data: json });\n  }\n\n  fetchingData() {\n    const promises = urls.map(name =>\n      fetch(name).then(response => response.json())\n    );\n    Promise.all(promises).then(results => {\n      this.setState({\n        servicesNames: [...this.state.servicesNames, ...results[0]]\n      });\n    });\n  }\n\n  render() {\n    const { time, servicesNames, data } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <Celkovystatus sluzby={data} time={time} />\n          <Statuses sluzby={data} time={time} names={servicesNames} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}