{"version":3,"sources":["components/Celkovystatus.js","components/Apistatus.js","components/Xmppstatus.js","App.js","index.js"],"names":["Celkovystatus","props","api","sluzby","barkioApi","map","data","status","xmpp","barkioXmpp","className","length","time","Apistatus","i","zdroj","x","y","id","issueTime","width","height","margin","top","right","bottom","left","type","domain","dataKey","name","unit","cursor","strokeDasharray","shape","entry","key","fill","Xmppstatus","errTime","urls","App","state","geterrTime","a","fetch","getErrTime","json","this","fetchingData","then","setState","promises","response","Promise","all","results","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3e653a3.chunk.js","sourcesContent":["import React from \"react\";\r\n//import moment from \"moment\";\r\n\r\nconst Celkovystatus = props => {\r\n  const api = props.sluzby.barkioApi.map(data => {\r\n    return data.status;\r\n  });\r\n  const xmpp = props.sluzby.barkioXmpp.map(data => {\r\n    return data.status;\r\n  });\r\n  return (\r\n    <div className=\"all\">\r\n      <h1>Barkio services status</h1>\r\n\r\n      {api[api.length - 1] && xmpp[xmpp.length - 1] === true ? (\r\n        <p>All server components operational</p>\r\n      ) : (\r\n        <p>\r\n          We are recognizing issues on one of our service\r\n          <br />\r\n          since {props.time}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Celkovystatus;\r\n","import React from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell\r\n} from \"recharts\";\r\n\r\nconst Apistatus = props => {\r\n  let i = 1;\r\n  const zdroj = props.sluzby.map(data => {\r\n    return {\r\n      x: data.status === true ? \"true\" : \"false\",\r\n      y: data.time,\r\n      id: i++\r\n    };\r\n  });\r\n  const issueTime = props.sluzby.map(data => {\r\n    return data.status;\r\n  });\r\n  const data = zdroj;\r\n  return (\r\n    <div className=\"api\">\r\n      {\" \"}\r\n      <p className=\"m-0 p-0\">Last 24 hours (5 min.)</p>\r\n      {issueTime[issueTime.length - 1] === true\r\n        ? \"Service is working\"\r\n        : \"there is an issue since \" + props.time}\r\n      <div className=\"d-flex justify-content-center\">\r\n        <ScatterChart\r\n          width={1600}\r\n          height={150}\r\n          margin={{\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 20\r\n          }}\r\n        >\r\n          <CartesianGrid />\r\n          <YAxis\r\n            type=\"number\"\r\n            domain={[0, 1000]}\r\n            dataKey=\"y\"\r\n            name=\"latency\"\r\n            unit=\"ms\"\r\n          />\r\n          <XAxis type=\"\" domain={[0, 288]} dataKey=\"id\" name=\"\" unit=\"\" />\r\n          <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n          <Scatter name=\"Connection\" data={data} shape=\"circle\">\r\n            {data.map((entry, id) => (\r\n              <Cell\r\n                key={id}\r\n                fill={entry.x === \"true\" ? \"#00ff40\" : \"#ff0000\"}\r\n              />\r\n            ))}\r\n          </Scatter>\r\n        </ScatterChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Apistatus;\r\n","import React from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell\r\n} from \"recharts\";\r\n\r\nconst Xmppstatus = props => {\r\n  let i = 1;\r\n  const zdroj = props.sluzby.map(data => {\r\n    return {\r\n      x: data.status === true ? \"true\" : \"false\",\r\n      y: data.time,\r\n      id: i++\r\n    };\r\n  });\r\n  const issueTime = props.sluzby.map(data => {\r\n    return data.status;\r\n  });\r\n  const data = zdroj;\r\n  return (\r\n    <div className=\"api\">\r\n      {\" \"}\r\n      <p className=\"m-0 p-0\">Last 24 hours (5 min.)</p>\r\n      {issueTime[issueTime.length - 1] === true\r\n        ? \"Service is working\"\r\n        : \"there is an issue since \" + props.time}\r\n      <div className=\"d-flex justify-content-center\">\r\n        <ScatterChart\r\n          width={1600}\r\n          height={150}\r\n          margin={{\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 20\r\n          }}\r\n        >\r\n          <CartesianGrid />\r\n          <YAxis\r\n            type=\"number\"\r\n            domain={[0, 1000]}\r\n            dataKey=\"y\"\r\n            name=\"latency\"\r\n            unit=\"ms\"\r\n          />\r\n          <XAxis type=\"\" domain={[0, 288]} dataKey=\"id\" name=\"\" unit=\"\" />\r\n          <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n          <Scatter name=\"Connection\" data={data} shape=\"circle\">\r\n            {data.map((entry, id) => (\r\n              <Cell\r\n                key={id}\r\n                fill={entry.x === \"true\" ? \"#00ff40\" : \"#ff0000\"}\r\n              />\r\n            ))}\r\n          </Scatter>\r\n        </ScatterChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Xmppstatus;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//import moment from \"moment\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Celkovystatus from \"./components/Celkovystatus\";\nimport Apistatus from \"./components/Apistatus\";\nimport Xmppstatus from \"./components/Xmppstatus\";\nconst errTime = \"http://localhost:3001/time\";\nconst urls = [\n  \"http://localhost:3001/barkioApi\",\n  \"http://localhost:3001/barkioXmpp\"\n];\n\nexport class App extends Component {\n  state = {\n    barkioApi: [],\n    barkioXmpp: [],\n    time: []\n  };\n  async componentDidMount() {\n    await this.fetchingData();\n\n    async function geterrTime() {\n      let getErrTime = await fetch(errTime);\n      let data = await getErrTime.json();\n      return data;\n    }\n    geterrTime().then(data => {\n      this.setState({ time: data });\n    });\n  }\n\n  fetchingData() {\n    const promises = urls.map(name =>\n      fetch(name).then(response => response.json())\n    );\n    Promise.all(promises).then(results => {\n      this.setState({\n        barkioApi: [...this.state.barkioApi, ...results[0]],\n        barkioXmpp: [...this.state.barkioXmpp, ...results[1]]\n      });\n    });\n  }\n\n  render() {\n    const { time, barkioApi, barkioXmpp } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <Celkovystatus sluzby={this.state} time={time} />\n          <h4>API server status</h4>\n          <Apistatus sluzby={barkioApi} time={time} />\n          <h4>XMPP server status</h4>\n          <Xmppstatus sluzby={barkioXmpp} time={time} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}